name: Linux

on: [pull_request, push]

jobs:
  linux-build:
    name: Build (Linux)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Prepare to compile
      run: sudo apt-get update && sudo apt-get install cmake gcc-10 g++-10 libsdl2-dev
    - name: Configure to compile
      run: mkdir Release && cd Release && cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_C_COMPILER=gcc-10 -D CMAKE_CXX_COMPILER=g++-10 ..
    - name: Compilation
      run: cd Release && make -j $(nproc --all)
    - name: Prepare to upload
      run: mkdir ready && cp Release/libGOESP.so ready/ && rm -rf Release
    - name: SHA1
      working-directory: ready
      run: sha1sum libGOESP.so > libGOESP.so.sha1
      
    - name: Configure to compile AVX
      run: mkdir Release && cd Release && cmake -D CMAKE_BUILD_TYPE=Release-D CMAKE_CXX_FLAGS=-mavx -D CMAKE_C_COMPILER=gcc-10 -D CMAKE_CXX_COMPILER=g++-10 ..
    - name: Compilation AVX
      run: cd Release && make -j $(nproc --all)
    - name: Prepare to upload AVX
      run: cp Release/libGOESP.so ready/libGOESP_AVX.so && rm -rf Release
    - name: SHA1 AVX
      working-directory: ready
      run: sha1sum libGOESP_AVX.so > libGOESP_AVX.so.sha1
      
      
    - name: Configure to compile AVX2
      run: mkdir Release && cd Release && cmake -D CMAKE_BUILD_TYPE=Release-D CMAKE_CXX_FLAGS=-mavx2 -D CMAKE_C_COMPILER=gcc-10 -D CMAKE_CXX_COMPILER=g++-10 ..
    - name: Compilation AVX2
      run: cd Release && make -j $(nproc --all)
    - name: Prepare to upload AVX2
      run: cp Release/libGOESP.so ready/libGOESP_AVX2.so && rm -rf Release
    - name: SHA1 AVX2
      working-directory: ready
      run: sha1sum libGOESP_AVX2.so > libGOESP_AVX2.so.sha1
    
      
    - name: Push to Discord
      run: |
            cd ready
            tar -czvf "..\GOESP Release Linux.tar.gz" *
            cd ..
            curl -X POST -H 'Content-Type: multipart/form-data' -F 'file=@GOESP Release Linux.tar.gz' -F (('payload_json={\"embeds\": [{\"color\": 7506394,\"fields\": [{\"name\": \"GitHub repo\",\"value\": \"[Click!](https://github.com/playday3008/GOESP)\"},{\"name\": \"Size\",\"value\": \"x.xx MB\"}],\"author\": {\"name\": \"GOESP (Linux)\"},\"footer\": {\"text\": \"ID: xxxxxxxx\"},\"timestamp\": \"yyyy-MM-ddTHH:mm:ss.000Z\"}]}') -replace "yyyy-mm-ddTHH:mm:ss", (Get-Date -Format "yyyy-MM-ddTHH:mm:ss") -replace "x.xx MB", ("{0:N2} MB" -f ((Get-Item 'GOESP Release Linux.tar.gz').length/1MB)) -replace "xxxxxxxx", ${{github.run_id}}) ${{ secrets.DISCORD_HOOK }}
      shell: pwsh
       
    - uses: actions/upload-artifact@v1
      with:
        name: GOESP Release Linux
        path: ready
